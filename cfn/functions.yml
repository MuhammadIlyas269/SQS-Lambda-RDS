create-order:
  handler: src/create-order.handler
  vpc:
    securityGroupIds:
      - !GetAtt LambdaSecurityGroup.GroupId
    subnetIds:
      - !Ref SubnetOne
      - !Ref SubnetTwo
  package:
    include:
      - src/create-order.js
  layers:
    - { Ref: CustomModulesLambdaLayer }
  events:
    - http:
        path: /orders
        method: post
        cors: true
  environment:
    SQS_QUEUE_URL: ${construct:order-processing-queue.queueUrl}

customer-order:
  handler: src/customer-order.handler
  vpc:
    securityGroupIds:
      - !GetAtt LambdaSecurityGroup.GroupId
    subnetIds:
      - !Ref SubnetOne
      - !Ref SubnetTwo
  package:
    include:
      - src/customer-order.js
  layers:
    - { Ref: CustomModulesLambdaLayer }
  events:
    - http:
        path: /orders/{order_id}/customer
        method: get
        cors: true
  environment:
    DB_ENDPOINT: !GetAtt ERPDatabase.Endpoint.Address
    SQS_QUEUE_URL: ${construct:update-stock-queue.queueUrl}
    DB_NAME: ${self:custom.settings.DB_NAME}
    DB_PASSWORD: ${self:custom.settings.DB_PASSWORD}
    DB_USERNAME: ${self:custom.settings.DB_USERNAME}
